{"version":3,"sources":["Components/MyPhoto.jpg","ColorModeSwitcher.js","Components/Header.js","Components/CardList.js","Components/About.js","Components/Contact.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","react_default","a","createElement","chakra_ui_button_esm","Object","assign","size","fontSize","aria-label","concat","variant","color","marginLeft","onClick","icon","Header","colorMode","chakra_ui_layout_esm","minW","as","py","bg","maxW","Flex","minWidth","alignItems","gap","chakra_ui_media_query_esm","above","chakra_ui_breadcrumb_esm","fontWeight","spacing","separator","chakra_ui_icons_esm","href","below","chakra_ui_menu_esm","IconButton","ColorModeSwitcher_ColorModeSwitcher","CardList","_props$cards","cards","id","columns","map","card","key","title","_hover","shadow","noOfLines","body","project_ref","colorScheme","About","justifyContent","chakra_ui_image_esm","px","borderRadius","boxSize","src","logo","alt","Contact","leftIcon","index_esm","posts","userId","theme","extendTheme","colors","brand","100","200","300","400","500","600","App","chakra_ui_react_esm","Header_Header","About_About","Contact_Contact","CardList_CardList","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","container","document","getElementById","ReactDOM","render","react","chakra_ui_color_mode_esm","src_App","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.462f7b92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MyPhoto.51861288.jpg\";","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"lg\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import {\r\n  Container, Flex, Box,\r\n  useColorMode,\r\n  Heading,\r\n  Breadcrumb, BreadcrumbItem, BreadcrumbLink,\r\n  MenuButton, Menu, IconButton, MenuList, MenuItem, Spacer,\r\n} from '@chakra-ui/react';\r\nimport { ColorModeSwitcher } from '../ColorModeSwitcher';\r\nimport { HamburgerIcon, SmallCloseIcon } from '@chakra-ui/icons';\r\nimport { Show } from '@chakra-ui/react'\r\nimport React from 'react'\r\nconst Header = () => {\r\n  const {colorMode} = useColorMode();\r\n  return(\r\n    <Box minW = '580' as = \"header\" py = {1.5} bg = {colorMode === 'dark' ? 'gray.600' : 'green.300'}>\r\n      <Container maxW = \"container.lg\">\r\n        <Flex Flex minWidth='max-content' alignItems='center' gap='2'>\r\n\r\n          <Heading size = '2xl'>\r\n            Steinbach.\r\n          </Heading>\r\n          <Spacer />\r\n          <Show above = '768px'>\r\n            <Breadcrumb fontWeight='900' fontSize='3xl' spacing='12px' separator={<SmallCloseIcon color='gray.500' />}>\r\n              <BreadcrumbItem>\r\n                <BreadcrumbLink href='#About'>About</BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem>\r\n                <BreadcrumbLink href='#Contact'>Contact</BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n\r\n              <BreadcrumbItem>\r\n                <BreadcrumbLink href='#Projects'>Projects</BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <Spacer />\r\n          </Show>\r\n\r\n          <Show below = '767px'>\r\n            <Menu >\r\n              <MenuButton\r\n                as={IconButton}\r\n                aria-label='Options'\r\n                icon={<HamburgerIcon />}\r\n                variant='outline'\r\n              />\r\n              <MenuList>\r\n                <MenuItem as = \"a\" href='#About'>\r\n                  About\r\n                </MenuItem>\r\n                <MenuItem as = \"a\" href='#Contact'>\r\n                  Contact\r\n                </MenuItem>\r\n                <MenuItem as = \"a\" href='#Projects'>\r\n                  Projects\r\n                </MenuItem>\r\n              </MenuList>\r\n            </Menu>\r\n          </Show>\r\n\r\n          <ColorModeSwitcher />\r\n        </Flex>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\nexport {Header}\r\n","import { SimpleGrid, Box, Button, Heading, Text, Stack } from '@chakra-ui/react';\r\nimport React from 'react'\r\nexport const CardList = props =>{\r\n  const {cards = []} = props;\r\n  return(\r\n    <Box minW = '560'>\r\n      <Heading id = \"Projects\" fontSize = \"6xl\" py = \"10\">\r\n        My projects\r\n      </Heading>\r\n    <SimpleGrid columns = {[1, null, 2, 3]} spacing = {[4, null, 6,]}>\r\n      {\r\n        cards.map(card=>(\r\n          <Stack key = {card.title} spacing = {3} _hover={{shadow:'md'}} p={2}>\r\n            <Heading fontSize = \"3xl\" fontWeight=\"bold\" >\r\n              {card.title}\r\n            </Heading>\r\n            <Text fontSize = \"xl\" noOfLines={4}>\r\n              {card.body}\r\n            </Text>\r\n            <Button as = \"a\" href = {card.project_ref} colorScheme=\"brand\">\r\n              To project\r\n            </Button>\r\n          </Stack>\r\n          )\r\n        )\r\n      }\r\n    </SimpleGrid>\r\n  </Box>\r\n  )\r\n}","import { Container, Flex, Heading, Hide, Image, Spacer, Text } from '@chakra-ui/react';\r\nimport logo from \"./MyPhoto.jpg\";\r\nimport React from 'react'\r\nexport const About = () =>{\r\n\r\n  return(\r\n    <Container minW = '560' maxW=\"container.lg\">\r\n      <Heading id = \"About\" fontSize= \"6xl\" py = \"10\">\r\n        About me\r\n      </Heading>\r\n      <Flex justifyContent=\"space-between\"  py=\"0.5\" >\r\n        <Text  fontSize = \"2xl\" fontWeight = \"semibold\">\r\n          Hello, I'm Ivan, a second year student of MTUCI and a beginner front-end developer.\r\n        </Text>\r\n        <Spacer />\r\n        <Text fontSize= '2xl' fontWeight = \"semibold\">\r\n          My favourite joke: <br/>\r\n          Three Tomatoes A family of three tomatoes were walking downtown one day when the little baby tomato started lagging behind.\r\n          The big father tomato walks back to the baby tomato, stomps on her, squashing her into a red paste, and says, \"Ketchup!\"\r\n        </Text>\r\n\r\n        <Image\r\n          px = \"5\"\r\n          borderRadius='full'\r\n          boxSize='320px'\r\n          src={logo}\r\n          alt='Logo'\r\n        />\r\n\r\n      </Flex>\r\n      <Hide below = \"767px\">\r\n      <Flex justifyContent=\"space-between\" alignItems=\"baseline\">\r\n      <Text fontSize = \"lg\" as = \"cite\" p=\"1\">\r\n        Eyes of gray—the sodden quay,\r\n        <br/>\r\n        Driving rain and falling tears,\r\n        <br/>\r\n        As the steamer heads to sea\r\n        <br/>\r\n        In a parting storm of cheers.\r\n        <br/>\r\n        Sing, for Faith and Hope are high.\r\n        <br/>\r\n        None so true as you and I—\r\n        <br/>\r\n        Sing the Lovers’ Litany:—\r\n        <br/>\r\n        «Love like ours can never die!»\r\n        </Text>\r\n      <Text fontSize = \"lg\" as = \"cite\" p=\"3\">\r\n        Eyes of black—the throbbing keel\r\n        <br/>\r\n        Milky foam to left and right;\r\n        <br/>\r\n        Little whispers near the wheel\r\n        <br/>\r\n        In the brilliant tropic night.\r\n        <br/>\r\n        Cross that rules the Southern Sky,\r\n        <br/>\r\n        Stars that sweep, and wheel, and fly,\r\n        <br/>\r\n        Hear the Lovers’ Litany:—\r\n        <br/>\r\n        «Love like ours can never die!»\r\n        <br/>\r\n      </Text>\r\n      <Text fontSize = \"lg\" as = \"cite\" p=\"3\">\r\n        Eyes of brown—the dusty plain\r\n        <br/>\r\n        Split and parched with heat of June.\r\n        <br/>\r\n        Flying hoof and tightened rein,\r\n        <br/>\r\n        Hearts that beat the old, old tune.\r\n        <br/>\r\n        Side by side the horses fly,\r\n        <br/>\r\n        Frame we now the old reply\r\n        <br/>\r\n        Of the Lovers’ Litany:—\r\n        <br/>\r\n        «Love like ours can never die!»\r\n        <br/>\r\n      </Text>\r\n      <Text fontSize = \"lg\" as = \"cite\" p=\"3\">\r\n        Eyes of blue—the Simla Hills\r\n        <br/>\r\n        Silvered with the moonlight hoar;\r\n        <br/>\r\n        Pleading of the waltz that thrills,\r\n        <br/>\r\n        Dies and echoes round Benmore.\r\n        <br/>\r\n        «Mabel,» «Officers,» «Good-bye,»\r\n        <br/>\r\n        Glamour, wine, and witchery—\r\n        <br/>\r\n        On my soul’s sincerity,\r\n        <br/>\r\n        «Love like ours can never die!»\r\n        <br/>\r\n        </Text>\r\n      <Text fontSize = \"lg\" as = \"cite\" p=\"3\">\r\n        Pity my most luckless state.\r\n        <br/>\r\n        Four times Cupid’s debtor I—\r\n        <br/>\r\n        Bankrupt in quadruplicate.\r\n        <br/>\r\n        Yet, despite this evil case,\r\n        <br/>\r\n        And a maiden showed me grace,\r\n        <br/>\r\n        Four-and-forty times would I\r\n        <br/>\r\n        Sing the Lovers’ Litany:—\r\n        <br/>\r\n        «Love like ours can never die!»\r\n        <br/>\r\n      </Text>\r\n      </Flex>\r\n      </Hide>\r\n    </Container>\r\n  )\r\n}","import { Button, Container, Heading, HStack } from '@chakra-ui/react';\r\nimport {FaGithub, FaTelegramPlane } from 'react-icons/all';\r\nimport React from 'react'\r\nimport { EmailIcon } from '@chakra-ui/icons';\r\n\r\nexport const Contact = () => {\r\n  return(\r\n    <Container minW = '560' maxW=\"container.lg\">\r\n      <Heading id = \"Contact\" fontSize = \"6xl\" py = \"10\">\r\n        Contact me\r\n      </Heading>\r\n      <HStack>\r\n        <Button as = \"a\" href = \"https://github.com/Stainbakh\" colorScheme='brand' leftIcon={<FaGithub />} size =\"lg\" >\r\n          GitHub\r\n        </Button>\r\n        <Button as = \"a\" href = \"https://t.me/shtaivs\" colorScheme='brand' leftIcon={<FaTelegramPlane />} size = \"lg\">\r\n          Telegram\r\n        </Button>\r\n        <Button as = \"a\" href = \"https://vk.com/shtis\" colorScheme='brand' leftIcon={<EmailIcon />} size = \"lg\">\r\n          Vk\r\n        </Button>\r\n      </HStack>\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport {\r\n  ChakraProvider,\r\n  Container,\r\n  extendTheme,\r\n} from '@chakra-ui/react';\r\n\r\nimport { Header } from './Components/Header'\r\nimport { CardList } from './Components/CardList'\r\nimport { About } from './Components/About'\r\nimport { Contact } from './Components/Contact'\r\nconst  posts = [\r\n    {\r\n      \"project_ref\": \"https://github.com/Stainbakh/MTUCI-SIAOD/blob/main/Lab/Lab111.ipynb\",\r\n      \"userId\": 1,\r\n      \"id\": 1,\r\n      \"title\": \"First SIAOD lab\",\r\n      \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n    },\r\n    {\r\n      \"project_ref\": \"https://github.com/Stainbakh/MTUCI-SIAOD/blob/main/Lab/Lab2.ipynb\",\r\n      \"userId\": 1,\r\n      \"id\": 2,\r\n      \"title\": \"Second SIAOD lab\",\r\n      \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\r\n    },\r\n    {\r\n      \"project_ref\": \"https://github.com/Stainbakh/MTUCI-SIAOD/blob/main/Lab/Lab3.ipynb\",\r\n      \"userId\": 1,\r\n      \"id\": 3,\r\n      \"title\": \"Third SIAOD lab\",\r\n      \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\r\n    },\r\n    {\r\n      \"project_ref\": \"https://github.com/Stainbakh/MTUCI-SIAOD/blob/main/Lab/Lab4.ipynb\",\r\n      \"userId\": 1,\r\n      \"id\": 4,\r\n      \"title\": \"Fourth SIAOD lab\",\r\n      \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\r\n    },\r\n    {\r\n      \"project_ref\": \"https://github.com/Stainbakh/MTUCI-SIAOD/blob/main/Lab/Lab5.ipynb\",\r\n      \"userId\": 1,\r\n      \"id\": 5,\r\n      \"title\": \"Fifth SIAOD lab\",\r\n      \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\r\n    },\r\n    {\r\n      \"project_ref\": \"https://github.com/Stainbakh/MTUCI-SIAOD/blob/main/Lab/Lab6.ipynb\",\r\n      \"userId\": 1,\r\n      \"id\": 6,\r\n      \"title\": \"Sixth SIAOD lab\",\r\n      \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\r\n    },\r\n]\r\nconst theme = extendTheme({\r\n  colors: {\r\n    brand: {\r\n      100: '#ab47bc',\r\n      200: '#ab47bc',\r\n      300: '#ab47bc',\r\n      400: '#ce93d8',\r\n      500: '#ce93d8',\r\n      600: '#ce93d8',\r\n    }\r\n  }\r\n\r\n});\r\nfunction App() {\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Header />\r\n      <About />\r\n      <Contact />\r\n      <Container maxW=\"container.lg\">\r\n\r\n        <CardList cards={posts} />\r\n      </Container>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nconst container = document.getElementById('root');\nconst root = ReactDOM.createRoot(container);\n\nroot.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}